        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*This unit test for numHandCards function
        -:    2:This functions returns the number of card in a hand
        -:    3://creates a game state
        -:    4://returns number of cards in hand
        -:    5:*/
        -:    6:
        -:    7:#include "dominion.h"
        -:    8:#include <stdio.h>
        -:    9:#include "rngs.h"
        -:   10:#include <stdlib.h>
        -:   11:#include "dominion_helpers.h"
        -:   12:#include "assert.h"
        -:   13:
        -:   14:
        1:   15:int main(int argc, char ** argv){
        -:   16:    int returnValue;
        -:   17:    struct gameState G;
        -:   18:    //change these variables to test
        1:   19:    int players=2;
        1:   20:    int randomSeed=1;
        1:   21:    int hand[10]={curse, smithy, mine, gardens, great_hall, salvager, sea_hag, adventurer, silver, gold};
        -:   22:    //int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed, struct gameState *state)
        -:   23:    //create a hand to pass in
        -:   24:    
        -:   25:    
        -:   26:    //if game is created, print 
        1:   27:    returnValue=initializeGame(players,hand,randomSeed, &G);
        1:   28:    assert(returnValue == 0);
        -:   29:    
        1:   30:    printf("Unit Test 1:\n");
        1:   31:    printf("**Gamestate Created**\n");  
        1:   32:    printf("\n");
        -:   33:    
        -:   34:    int n;
        1:   35:    n = 10;
        -:   36:    
        1:   37:    returnValue=G.handCount[1];
        1:   38:    printf("%d", returnValue);
        1:   39:    if(returnValue == n)
        -:   40:    {
    #####:   41:    printf("PASS: numHandCards returns the correct value\n"); 
        -:   42:    //printf("%d", n);    
    #####:   43:    printf("\n");
        -:   44:    }
        -:   45:    
        1:   46:    if(returnValue != n)
        -:   47:    {
        1:   48:    printf("Fail: numHandCards Returns the correct value\n"); 
        -:   49:    //printf("%d", n);    
        1:   50:    printf("\n");
        -:   51:    }
        -:   52:    
        -:   53:    
        1:   54:    printf("This test was a success");
        1:   55:    printf("\n");
        1:   56:    printf("\n");
        -:   57:
        -:   58:    
        1:   59:    return 0;
        -:   60:    
        -:   61:    
        -:   62:    
        -:   63:}
